<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC
  "-//Apache Software Foundation//DTD XDOC 1.0//EN"
  "http://maven.apache.org/dtd/xdoc_1_0.dtd">
<!--
    Copyright 2016-2021 Bloomreach

    Licensed under the Apache License, Version 2.0 (the  "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS"
    BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<document>
  <properties>
    <title>Developer's How-to (Document Commenting Plugin)</title>
  </properties>
  <body>
    <section name="Developer's How-to (Document Commenting Plugin)">

      <subsection name="Configuring 'Comments' Field in Document Template">
        <p>
          In a document type definition (a.k.a. namespace configuration),
          you should add a custom field under <code>editor:templates/_default_</code> node
          like the following example (<code>document-commenting</code> node) in yaml format:
        </p>
        <source><![CDATA[
/document-commenting:
jcr:primaryType: frontend:plugin
caption: Comments
comment.deletable.author.only: false
comment.editable.author.only: false
comment.persistence.manager: org.onehippo.forge.document.commenting.cms.impl.DefaultJcrCommentPersistenceManager
comment.query.limit: 100
dialog.size: width=600,height=400
engine: ${engine}
mode: ${mode}
plugin.class: org.onehippo.forge.document.commenting.cms.impl.DefaultDocumentCommentingFieldPlugin
selection.mode: multiple
wicket.id: ${cluster.id}.right.item
wicket.model: ${wicket.model}
/cluster.options:
  jcr:primaryType: frontend:pluginconfig
  jcr.comment.persistence.date.format: yyyy-MM-dd HH:mm:ss
  jcr.comment.persistence.query: //element(*,doccommenting:commentdata)[@doccommenting:subjectid=''{0}'']
    order by @doccommenting:created descending
      ]]></source>
        <p>
          See the following for a full example in the demo project:
          <a href="https://github.com/bloomreach-forge/document-commenting/blob/master/demo/repository-data/config/src/main/resources/hcm-config/namespaces/doccommentingdemo/newsdocument.yaml">
            https://github.com/bloomreach-forge/document-commenting/blob/master/demo/repository-data/config/src/main/resources/hcm-config/namespaces/doccommentingdemo/newsdocument.yaml
          </a>
        </p>
        
      </subsection>

      <subsection name="Implementing your own CommentPersistenceManager service">
        <p>
          The Document Commenting plugin actually doesn't store/read data by itself, but relies on
          a <code>CommentPersistenceManager</code> service implementation specified in the plugin configuration as shown above.
          Therefore, you may extend the default implementation or you can replace it with a totally new implementation to
          support a different comment data storage (e.g, NoSQL database) for instance.
        </p>
        <p>
          See an example <code>CommentPersistenceManager</code> implementation code here:
          <a href="https://github.com/bloomreach-forge/document-commenting/blob/master/demo/cms/src/main/java/org/onehippo/forge/document/commenting/demo/cms/CustomPrioritizingJcrCommentPersistenceManager.java">
            https://github.com/bloomreach-forge/document-commenting/blob/master/demo/cms/src/main/java/org/onehippo/forge/document/commenting/demo/cms/CustomPrioritizingJcrCommentPersistenceManager.java
          </a>
        </p>
        <p>
          The example custom service implementation is used in the 'event' document namespace for demonstration purpose in the demo project.
        </p>
        <p>
          Put your own implementation class in your CMS module project.
        </p>
        <p>
          See <a href="apidocs/index.html">Javadocs</a> for detail about the <code>CommentPersistenceManager</code>.
        </p>
      </subsection>

      <subsection name="Plugin Parameters">
        <p>
          You may configure the following plugin parameters in the field definition of your document template definition (a.k.a 'namespace').
        </p>
        <table>
          <tr>
            <th>Parameter name</th>
            <th>Description</th>
            <th>Example value(s)</th>
            <th>Default value(s)</th>
          </tr>
          <tr>
            <td>caption</td>
            <td>Field caption, used as field label and dialog title.</td>
            <td>"Remarks"</td>
            <td>"Comments"</td>
          </tr>
          <tr>
            <td>comment.persistence.manager</td>
            <td><code>org.onehippo.forge.document.commenting.cms.api.CommentPersistenceManager</code> implementation class FQN.</td>
            <td>"org.onehippo.forge.document.commenting.cms.impl.DefaultJcrCommentPersistenceManager"</td>
            <td></td>
          </tr>
          <tr>
            <td>comment.query.limit</td>
            <td>
              The JCR query limit when retrieving the latest comment data by subject ID.
            </td>
            <td>20</td>
            <td>100</td>
          </tr>
          <tr>
            <td>dialog.size</td>
            <td>The size of the picker popup dialog.</td>
            <td>"width=500,height=350"</td>
            <td>"width=600,height=400"</td>
          </tr>
          <tr>
            <td>comment.editable.author.only</td>
            <td>
              Whether or not each comment can be edited only by the original comment author.
            </td>
            <td>true</td>
            <td>false</td>
          </tr>
          <tr>
            <td>comment.deletable.author.only</td>
            <td>
              Whether or not each comment can be deleted only by the original comment author.
            </td>
            <td>true</td>
            <td>false</td>
          </tr>
        </table>
      </subsection>

      <subsection name="Parameters of DefaultJcrCommentPersistenceManager">
        <p>
          The following parameters are set for the <code>DefaultJcrCommentPersistenceManager</code> implementation
          additionally (under <code>cluster.options</code> node).
        </p>
        <table>
          <tr>
            <th>Parameter name</th>
            <th>Description</th>
            <th>Example value(s)</th>
            <th>Default value(s)</th>
          </tr>
          <tr>
            <td>jcr.comment.persistence.query</td>
            <td>The JCR XPath query used when retrieving the latest comment data in the field area.</td>
            <td>
              //element(*,doccommenting:commentdata)[@doccommenting:subjectid=''{0}''] order by @doccommenting:lastModified descending
            </td>
            <td>
              //element(*,doccommenting:commentdata)[@doccommenting:subjectid=''{0}''] order by @doccommenting:created descending
            </td>
          </tr>
          <tr>
            <td>jcr.comment.persistence.date.format</td>
            <td>The date format string to display</td>
            <td>
              MM/dd/yyyy HH:mm:ss
            </td>
            <td>
              yyyy-MM-dd HH:mm:ss
            </td>
          </tr>
        </table>
      </subsection>

    </section>
  </body>
</document>
